---
date: "2023-05-26"
jupyter: julia-1.9
---

# New Julia Project {.unnumbered}
## First Time Julia Setup

::: {.callout-note}

You only have to follow these steps the first time after you download a new version of Julia and set it as your working version.

:::

Now that we have a better understanding of both Julia and the VSCode user interface, let's create a new Julia project.

First, open a fresh VSCode window.
If you already happen to be in a **workspace** (check in the "Explorer" panel), you can click on the "File" menu in the top left of the VSCode window, and then click "New Window".
Now, open the *Command Palette* (keyboard shortcut `Cmd + Shift + P` on Mac or `Ctrl + Shift + P` on Windows or Linux) and type "Julia: Start REPL".
Doing this should open up the integrated terminal with the Julia REPL running.
Type `pwd()` in the REPL and hit enter.
It should return your home directory (i.e. `/Users/<your-username>` on Mac or `C:\Users\<your-username>` on Windows).
From here we want to add a package called `DrWatson` to our Julia installation.
To do this, type `]` in the REPL and hit enter.
This enters the `Pkg` REPL, which is a special REPL for managing Julia packages.
Here you should see something like:

```julia-repl
(@v1.9) pkg>
```

Next, type `add DrWatson` and hit enter.
This will add the `DrWatson` package to your Julia installation, and will allow us to easily create new Julia projects in a consistent way that works well for epidemiology projects (among others).

## Creating a Folder for Your Projects

The first thing we need to do is create a folder that will house all our individual project folders.
To try and make your life easy, I would recommend you create this folder in your home directory, and call it ***Repos/*** (or something similar).
You can do this with Finder on Mac or File Explorer on Windows.

## Creating a Julia Project

Now let's create our first Julia project folder.
To do this, go back to the Julia `Pkg` REPL and hit backspace.
This will return you to the normal Julia REPL.
Now we need to navigate to the folder you just created.
To do this, type `cd("path/to/your/project/folder")` and hit enter.

From here, type `using DrWatson` and hit enter.
This will load the `DrWatson` package into your Julia session so you can use its functions.

To create the project folder, type `initialize_project("MyFirstProject")` and hit enter.
This will create a new project folder ***MyFirstProject/*** in the folder you navigated to earlier e.g., ***/Users/username/Documents/Repos/MyFirstProject/***.

Now you have a project folder, let's open it in VSCode.
In VSCode, click on the "File" menu in the top left of the VSCode window, and then click "Open Folder...".
From here, navigate to the project folder you just created and click "Open".
You VSCode window should refresh and you should now see the name of your project folder in the top center of the VSCode window (as well as in the top left of the "Explorer" panel).

Now, if you try to open the `Pkg` REPL again, you will see something different.
Instead it'll say:

```julia-repl
(MyFirstProject) pkg>
```

You're ready to start adding packages to your project!
I would recommend starting with following packages:

- `Revise`
- `DrWatson`
- `DataFrames`
- `DataFramesMeta`
- `CSV`
- `IJulia`
- `JuliaFormatter`
- `CairoMakie`

As before, to add a package, type `add <package-name>` and hit enter (you can add multiple packages at once by separating them with spaces e.g. `add <package-1> <package-2>`).

## Project Files

When you create a new Julia project, it creates two files in the project folder:

- ***Project.toml***: this is a TOML file that contains the names and versions of all the packages you have added to your project
- ***Manifest.toml***: this is a TOML file that contains the names and versions of all the packages you have added to your project, as well as the names and versions of all the packages that those packages depend on.
It is automatically generated by Julia, and you should not edit it manually.

Edit the ***Project.toml*** file to add your name in the authors field at the top of the file (you will need to create this), so it looks something like this:

```toml
name = "MyFirstProject"
authors = ["My Name"]

[deps]
CSV = "336ed68f-0bac-5ca0-87d4-7b16caf5d00b"
CairoMakie = "13f3f980-e62b-5c42-98c6-ff1f3baf88f0"
DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
DataFramesMeta = "1313f7d8-7da2-5740-9ea0-a2ca25f37964"
DrWatson = "634d3b9d-ee7a-5ddf-bec9-22491ea816e1"
IJulia = "7073ff75-c697-5162-941a-fcdaad2a7d2a"
JuliaFormatter = "98e50ef6-434e-11e9-1051-2b60c6c9e899"
Revise = "295af30f-e4ad-537b-8983-00126c2a3abe"
```

## Creating & Running a Julia Script

To create a Julia script in your , click on the "File" menu in the top left of the VSCode window, and then click "New File".
Alternatively, you could use the keyboard shortcut `Cmd + N` on Mac or `Ctrl + N` on Windows or Linux.

## Miscellaneous
### Naming Files

When naming files and folders, it is important to be consistent and descriptive.
Ideally the name will contain no spaces, and you can use dashes to separate words.
See [this presentation](https://speakerdeck.com/jennybc/how-to-name-files) by Jenny Bryan for more information on naming files and folders, but in short:

- KISS (Keep It Simple Stupid): use simple and consistent file names
  - It needs to be machine readable
  - It needs to be human readable
  - It needs to order well in a directory
  - No special characters and no spaces!
- Use YYYY-MM-DD date format
- Use `-` to delimit words and `_` to delimit sections
  - i.e. ***2019-01-19_my-data.csv***
- Left-pad numbers
  - i.e. ***01_my-data.csv*** vs ***1_my-data.csv***
  - If you donâ€™t, file orders get messed up when you get to double-digits